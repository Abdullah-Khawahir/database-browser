/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.stream.Collectors;

import javax.swing.table.DefaultTableModel;

import com.mysql.cj.Query;
import databaseIO.Database;

/**
 *
 * @author Abtuly
 */
public class JoinUI extends javax.swing.JFrame {

   /**
    * Creates new form JoinUI
    */
   public JoinUI() {
      initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */

   // <editor-fold defaultstate="collapsed" desc="Generated Code">
   private void initComponents() {
      selectedColumns = new ArrayList<String>();
      tableABox = new javax.swing.JComboBox<>();
      jScrollPane1 = new javax.swing.JScrollPane();
      tableAColumns = new javax.swing.JTable();
      tableBBox = new javax.swing.JComboBox<>();
      jScrollPane2 = new javax.swing.JScrollPane();
      tableBColumns = new javax.swing.JTable();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      joinBtn = new javax.swing.JButton();
      closeBtn = new javax.swing.JButton();
      tableAcheck = new javax.swing.JCheckBox();
      tableBcheck = new javax.swing.JCheckBox();
      selectColumnsB = new javax.swing.JButton();
      selectColumnsA = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
      String[] tablesNames = Database.getTables().stream().map(t -> t.getName()).collect(Collectors.toList())
            .toArray(String[]::new);

      tableABox
            .setModel(new javax.swing.DefaultComboBoxModel<>(tablesNames));
      tableABox.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            tableABoxActionPerformed(evt);
         }
      });

      jScrollPane1.setViewportView(tableAColumns);

      tableBBox
            .setModel(new javax.swing.DefaultComboBoxModel<>(tablesNames));
      tableBBox.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            tableBBoxActionPerformed(evt);
         }
      });

      tableBColumns.setAutoCreateRowSorter(true);

      jScrollPane2.setViewportView(tableBColumns);

      jLabel1.setText("Table A");

      jLabel2.setText("Table B");

      joinBtn.setText("Join");

      closeBtn.setText("Close");
      closeBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            closeBtnActionPerformed(evt);
         }
      });

      joinBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            joinBtnActionPerformed(evt);
         }
      });

      selectColumnsA.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            selectColumnsAActionPerformed(evt);
         }
      });

      selectColumnsB.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            selectColumnsBActionPerformed(evt);
         }
      });

      tableAcheck.setText("include all columns");

      tableBcheck.setText("include all columns");

      selectColumnsB.setText("Custom Columns");

      selectColumnsA.setText("Custom Columns");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                              .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(selectColumnsA, javax.swing.GroupLayout.Alignment.LEADING,
                                          javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                          Short.MAX_VALUE)
                                    .addComponent(tableAcheck, javax.swing.GroupLayout.Alignment.LEADING,
                                          javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                          Short.MAX_VALUE))
                              .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                              .addComponent(tableABox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                              .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(selectColumnsB, javax.swing.GroupLayout.Alignment.LEADING,
                                          javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                          Short.MAX_VALUE)
                                    .addComponent(tableBcheck, javax.swing.GroupLayout.Alignment.LEADING))
                              .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                              .addComponent(tableBBox, javax.swing.GroupLayout.PREFERRED_SIZE, 333,
                                    javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17))
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(joinBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 124,
                              javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 124,
                              javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(236, 236, 236)));
      layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                              .addGroup(layout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tableABox, javax.swing.GroupLayout.PREFERRED_SIZE,
                                          javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
                                          javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tableAcheck)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(selectColumnsA))
                              .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tableBBox, javax.swing.GroupLayout.PREFERRED_SIZE,
                                          javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120,
                                          javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tableBcheck)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(selectColumnsB)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                              .addComponent(closeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                              .addComponent(joinBtn, javax.swing.GroupLayout.DEFAULT_SIZE,
                                    javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(10, Short.MAX_VALUE)));

      this.tableAcheck.setVisible(false);
      this.tableBcheck.setVisible(false);
      pack();
      this.setVisible(true);
   }// </editor-fold>

   private void selectColumnsAActionPerformed(ActionEvent evt) {
      if (!this.tableAcheck.isSelected())
         new CustomColumns(tableABox.getSelectedIndex(),
               Database.getTables().get(tableABox.getSelectedIndex()).getName());
   }

   private void selectColumnsBActionPerformed(ActionEvent evt) {
      if (!this.tableAcheck.isSelected())
         new CustomColumns(tableBBox.getSelectedIndex(),
               Database.getTables().get(tableBBox.getSelectedIndex()).getName());
   }

   private void joinBtnActionPerformed(ActionEvent evt) {
      String sql = "", clms = "";
      if (!selectedColumns.isEmpty()) {
         for (String string : selectedColumns) {
            if (!string.equals(selectedColumns.get(selectedColumns.size() - 1))) {
               clms += string + " , ";
            } else {
               clms += string;
            }
         }
      } else {
         clms = "*";
      }

      sql = "Select " + clms + " From " + (String) tableABox.getSelectedItem() + " INNER JOIN "
            + (String) tableBBox.getSelectedItem() + " ON "
            + (String) tableABox.getSelectedItem() + "."
            + tableAColumns.getModel().getValueAt(tableAColumns.getSelectedRow(), 0) + " = "
            + (String) tableBBox.getSelectedItem() + "."
            + tableBColumns.getModel().getValueAt(tableBColumns.getSelectedRow(), 0);

      System.out.println(sql);
      MainUI.displyResaltSet(databaseIO.Query.QUERY(sql));
      dispose();

   }

   /**
    * returns the table's column name and data type as 2d array from the Databae
    * class
    * 
    * @param index of the table from Database class
    * @return the table's column name and data type as 2d String Array
    */
   private String[][] getTableAs2DArray(int index) {
      String[][] tablesColomns = new String[Database.getTables().get(index).getColumnNames().size()][2];
      for (int i = 0; i < tablesColomns.length; i++) {
         tablesColomns[i][0] = Database.getTables().get(index).getColumnNames().get(i);
         tablesColomns[i][1] = Database.getTables().get(index).getDataType().get(i);
      }
      return tablesColomns;
   }

   private void tableABoxActionPerformed(java.awt.event.ActionEvent evt) {
      tableAColumns.setModel(new DefaultTableModel(getTableAs2DArray(tableABox.getSelectedIndex()), new String[] {
            "Table Name", "Data Type"
      }) {
         boolean[] canEdit = new boolean[] {
               false, false
         };

         public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
         }
      });

   }

   private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {
      this.dispose();
   }

   private void tableBBoxActionPerformed(java.awt.event.ActionEvent evt) {
      tableBColumns.setModel(new DefaultTableModel(getTableAs2DArray(tableBBox.getSelectedIndex()), new String[] {
            "Table Name", "Data Type"
      }) {
         boolean[] canEdit = new boolean[] {
               false, false
         };

         public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit[columnIndex];
         }
      });
   }

   /**
    * @param args the command line arguments
    */
   public void run() {
      /* Set the Nimbus look and feel */
      // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
      // (optional) ">
      /*
       * If Nimbus (introduced in Java SE 6) is not available, stay with the default
       * look and feel.
       * For details see
       * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(JoinUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(JoinUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(JoinUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(JoinUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      // </editor-fold>

      /* Create and display the form */
      // java.awt.EventQueue.invokeLater(new Runnable() {
      // public void run() {
      // new JoinUI().setVisible(true);
      // }
      // });
   }

   public static ArrayList<String> getSelectedColumns() {
      return selectedColumns;
   }

   private static ArrayList<String> selectedColumns;

   // Variables declaration - do not modify
   private javax.swing.JButton closeBtn;
   private javax.swing.JButton joinBtn;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane2;
   private javax.swing.JButton selectColumnsA;
   private javax.swing.JButton selectColumnsB;
   private javax.swing.JComboBox<String> tableABox;
   private javax.swing.JTable tableAColumns;
   private javax.swing.JCheckBox tableAcheck;
   private javax.swing.JComboBox<String> tableBBox;
   private javax.swing.JTable tableBColumns;
   private javax.swing.JCheckBox tableBcheck;

   // End of variables declaration

}
