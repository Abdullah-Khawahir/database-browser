package UI;

import javax.swing.JTable;

import databaseIO.Query;
import databaseIO.Table;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Abtuly
 */
public class UpdateUI extends javax.swing.JFrame {

   /**
    * Creates new form UpdateUI
    * 
    * @param selectedTableContent
    * @param table
    */
   public UpdateUI(JTable selectedTableContent, Table table) {
      this.selectedTable = selectedTableContent;
      this.tableTarget = table;

      initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */

   // <editor-fold defaultstate="collapsed" desc="Generated Code">
   private void initComponents() {

      updateBtn = new javax.swing.JButton();
      closeBtn = new javax.swing.JButton();
      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      jScrollPane1 = new javax.swing.JScrollPane();
      currentData = new javax.swing.JTable();
      jScrollPane3 = new javax.swing.JScrollPane();
      newData = new javax.swing.JTable();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

      updateBtn.setText("Update");
      updateBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            updateBtnActionPerformed(evt);
         }
      });

      closeBtn.setText("Close");
      closeBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            closeBtnActionPerformed(evt);
         }
      });

      jLabel1.setText("current data");

      jLabel2.setText("new data");
      // myCode starts here
      String cloumnNames[] = new String[this.selectedTable.getColumnModel().getColumnCount()];
      for (int i = 0; i < cloumnNames.length; i++) {
         cloumnNames[i] = selectedTable.getModel().getColumnName(i);

      }

      String[][] data = new String[1][cloumnNames.length];
      for (int i = 0; i < cloumnNames.length; i++) {
         data[0][i] = (String) this.selectedTable.getValueAt(this.selectedTable.getSelectedRow(), i);

      }

      currentData.setModel(new javax.swing.table.DefaultTableModel(data, cloumnNames));

      currentData.setFocusable(false);
      currentData.setRowSelectionAllowed(false);
      currentData.setCellSelectionEnabled(false);
      // myCode ends here

      jScrollPane1.setViewportView(currentData);

      newData.setModel(new javax.swing.table.DefaultTableModel(cloumnNames, 1));
      jScrollPane3.setViewportView(newData);

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152,
                              javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152,
                              javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                  .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                              .addComponent(jScrollPane3)
                              .addComponent(jScrollPane1)
                              .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                          .addComponent(jLabel1)
                                          .addComponent(jLabel2))
                                    .addGap(0, 563, Short.MAX_VALUE)))
                        .addContainerGap()));
      layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 112,
                              javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 89,
                              javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                              .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
                                    javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32,
                                    javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

      pack();
      this.setVisible(true);
   }// </editor-fold>

   private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {
      // TODO add your handling code here:

      String setStatment = "";

      for (int i = 0; i < this.newData.getColumnCount(); i++) {

         if ((!((String) this.newData.getModel().getValueAt(0, i)).isBlank())) {
            if (this.tableTarget.getDataType().get(i).contains("int")) {

               if (i != this.newData.getColumnCount() - 1) {
                  setStatment += this.newData.getModel().getColumnName(i) + " = "
                        + this.newData.getModel().getValueAt(0, i)
                        + " ,";
               } else {
                  setStatment += this.newData.getModel().getColumnName(i) + " "
                        + this.newData.getModel().getValueAt(0, i)
                        + " ";
               }

            } else {

               if (i != this.newData.getColumnCount() - 1) {
                  setStatment += this.newData.getModel().getColumnName(i) + " = '"
                        + this.newData.getModel().getValueAt(0, i)
                        + "' ,";
               } else {
                  setStatment += this.newData.getModel().getColumnName(i) + " = '"
                        + this.newData.getModel().getValueAt(0, i)
                        + "' ";
               }

            }
         }
      }
      if (this.tableTarget.getDataType().get(0).contains("int")) {
         setStatment += "Where " + this.tableTarget.getColumnNames().get(0) + " = "
               + this.currentData.getModel().getValueAt(0, 0);
      } else {
         setStatment += "Where " + this.tableTarget.getColumnNames().get(0) + " = '"
               + this.currentData.getModel().getValueAt(0, 0) + "' ";
      }
      String sql = "UPDATE " + this.tableTarget.getName() + " SET " + setStatment;
      try {
         System.out.println(Query.executeUpdate(sql) + ": " + sql);
      } catch (Exception e) {
         // TODO: handle exception
      }

   }

   private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {
      this.dispose();
   }

   /**
    * @param args the command line arguments
    */
   public void run() {
      /* Set the Nimbus look and feel */
      // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
      // (optional) ">
      /*
       * If Nimbus (introduced in Java SE 6) is not available, stay with the default
       * look and feel.
       * For details see
       * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(UpdateUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(UpdateUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(UpdateUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(UpdateUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      // </editor-fold>

   }

   private Table tableTarget;
   private javax.swing.JTable selectedTable;

   // Variables declaration - do not modify
   private javax.swing.JButton closeBtn;
   private javax.swing.JTable currentData;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JScrollPane jScrollPane3;
   private javax.swing.JTable newData;
   private javax.swing.JButton updateBtn;
   // End of variables declaration
}
